function getCookie(e){const t=document.cookie.split("; "),n=t.find(t=>t.startsWith(e+"="));return n?decodeURIComponent(n.split("=")[1]):null}function extractAuthDataFromCookie(){const e=getCookie("auth");if(!e)return console.error("auth cookie not found."),null;try{const t=decodeURIComponent(e),n=JSON.parse(t);return{userId:n.userId,accessToken:n.accessToken}}catch(e){return console.error("Error parsing auth cookie:",e),null}}function formatDate(e){return new Date(e).toLocaleString()}async function fetchSessionInfo(e,t){const n=`\n          query SessionConnection($userId: ID) {\n              sessionConnection(userId: $userId, last: 15) {\n                  edges {\n                      node {\n                          ip\n                          os\n                          browser\n                          createdAt\n                      }\n                  }\n              }\n          }\n      `;try{const s=await fetch("https://www.ambassadoribet.com/_internal/gql",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({query:n,variables:{userId:e}})});if(!s.ok)throw new Error(`HTTP error! Status: ${s.status}`);return(await s.json())?.data?.sessionConnection?.edges||[]}catch(e){return console.error("Error fetching session information:",e),[]}}function renderSessionInfo(e){const t=document.getElementById("session-list");t&&(t.innerHTML="",0===e.length?t.innerHTML="<li>No session data found.</li>":e.forEach(e=>{const{ip:n,os:s,browser:o,createdAt:r}=e.node,i=document.createElement("li");i.innerHTML=`\n              <p><span class="label">\n                  <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">\n                    <path d="M4.5 3.5a1 1 0 1 1 2 0V4h-2v-.5zM3 4v-.5a2.5 2.5 0 0 1 5 0V4h.5A2.5 2.5 0 0 1 11 6.5V10h1.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1 0-1H4V6.5A2.5 2.5 0 0 1 6.5 4H3zm1 2.5V10h6V6.5a1.5 1.5 0 0 0-1.5-1.5H4.5A1.5 1.5 0 0 0 3 6.5z"/>\n                  </svg>\n                  IP:</span> ${n}</p>\n              <p><span class="label">\n                  <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">\n                    <path d="M10.5 1a1.5 1.5 0 0 0 0 3H11a.5.5 0 0 0 0-1h-.5A.5.5 0 0 1 10 2.5V1h.5zM4 3a1 1 0 1 0 0-2h-.5a.5.5 0 0 1-.5-.5V2a1 1 0 0 0 1 1zm1.5 5H3V5h2.5a2.5 2.5 0 0 1 0 5zm-3-1H2v1h.5a.5.5 0 0 0 .5-.5v-.5zM6.5 4a1.5 1.5 0 0 0 0 3H7V6h-.5A.5.5 0 0 1 6 5.5V4h.5zm6.5 3a.5.5 0 0 0 .5-.5V6h-1v.5a.5.5 0 0 0 .5.5z"/>\n                  </svg>\n                  OS:</span> ${s}</p>\n              <p><span class="label">\n                  <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">\n                    <path d="M6 0h4v2H6V0zm3 3H7v6H6a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2h-1V3z"/>\n                  </svg>\n                  Browser:</span> ${o}</p>\n              <p><span class="label">\n                  <svg width="16" height="16" fill="currentColor" viewBox="0 0 16 16">\n                    <path d="M8 2a6 6 0 1 1-6 6 6.006 6.006 0 0 1 6-6zM8 1a7 7 0 1 0 7 7A7.008 7.008 0 0 0 8 1zm.5 4a.5.5 0 0 1 .5.5V8H11a.5.5 0 0 1 0 1H8a.5.5 0 0 1-.5-.5V5.5a.5.5 0 0 1 .5-.5z"/>\n                  </svg>\n                  Time:</span> ${formatDate(r)}</p>\n          `,t.appendChild(i)}))}function refreshSessionData(){const e=sessionStorage.getItem("sessionData");e&&renderSessionInfo(JSON.parse(e))}async function fetchAndStoreSessionData(){const e=extractAuthDataFromCookie();if(!e||!e.userId||!e.accessToken)return void console.error("Failed to retrieve user ID or access token from cookie.");const{userId:t,accessToken:n}=e,s=await fetchSessionInfo(t,n);sessionStorage.setItem("sessionData",JSON.stringify(s))}function startSessionPolling(){fetchAndStoreSessionData(),setInterval(fetchAndStoreSessionData,360000),setInterval(refreshSessionData,1e3)}setTimeout(()=>{startSessionPolling()},3e3);
